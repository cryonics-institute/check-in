{"version":3,"sources":["images/alfred_feels_poorly.svg","images/patient_alert.png","images/patient_home.png","images/splash.png","images/standby_alert.png","components/PresentationComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","presentation","id","className","data","scale","content","key","x","y","src","alfredFeelsPoorly","alt","height","width","rotateZ","splash","z","patientHome","patientAlert","standbyAlert","rotateX","rotateY","href","Main","progress","fallbackMessage","map","d","index","React","createElement","Step","child","cloneElement","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,iD,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,oTC6S5BC,EAtSM,CACnB,CACEC,GAAI,QACJC,UAAW,OACXC,KAAM,CACJC,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,YAGf,CACEL,GAAI,SACJC,UAAW,OACXC,KAAM,CACJC,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,UACT,wBAAIJ,UAAY,UAAhB,mCAIN,CACED,GAAI,SACJC,UAAW,OACXC,KAAM,CACJI,GAAI,IACJC,EAAG,IACHJ,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,UACT,uBAAGJ,UAAY,UAAf,yBACA,yBAAKA,UAAY,UACf,yBACEO,IAAQC,IACRC,IAAM,uBACNT,UAAY,SACZU,OAAS,MACTC,MAAQ,YAMlB,CACEZ,GAAI,SACJC,UAAW,OACXC,KAAM,CACJI,GAAI,IACJC,EAAG,KACHM,QAAS,GACTV,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,UACT,uBAAGJ,UAAY,UAAf,mBACA,yBAAKA,UAAY,UACf,yBACEO,IAAQM,IACRJ,IAAM,gBACNT,UAAY,oBACZU,OAAS,MACTC,MAAQ,SAGZ,uBAAGX,UAAY,UAAS,oDAI9B,CACED,GAAI,SACJC,UAAW,OACXC,KAAM,CACJI,EAAG,EACHC,EAAG,KACHJ,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,UACT,uBAAGJ,UAAY,UAAf,iBACgB,6BADhB,iBAEgB,oCAFhB,QAEiC,6BAFjC,aAGgB,mCAHhB,OAG+B,0CAKrC,CACED,GAAI,SACJC,UAAW,OACXC,KAAM,CACJI,EAAG,EACHC,EAAG,KACHQ,EAAG,IACHF,QAAS,IACTV,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,UACT,uBAAGJ,UAAY,UACb,uBAAGA,UAAU,YAAb,mBAKR,CACED,GAAI,SACJC,UAAW,OACXC,KAAM,CACJI,EAAG,EACHC,EAAG,KACHQ,EAAG,IACHF,QAAS,EACTV,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,UACT,uBAAGJ,UAAY,UAAf,OACM,qCADN,gBACgC,wCAKtC,CACED,GAAI,SACJC,UAAW,OACXC,KAAM,CACJI,EAAG,EACHC,EAAG,IACHJ,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,UACT,uBAAGJ,UAAY,UAAf,4BACA,yBAAKA,UAAY,eACf,yBACEO,IAAQQ,IACRN,IAAM,uBACNT,UAAY,yBACZU,OAAS,MACTC,MAAQ,YAMlB,CACEZ,GAAI,SACJC,UAAW,OACXC,KAAM,CACJI,EAAG,IACHC,EAAG,IACHJ,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,UACT,uBAAGJ,UAAY,UAAf,qCAGA,yBAAKA,UAAY,eACf,yBACEO,IAAQS,IACRP,IAAM,uBACNT,UAAY,yBACZU,OAAS,MACTC,MAAQ,SAGZ,uBAAGX,UAAY,UAAf,kCAMN,CACED,GAAI,SACJC,UAAW,OACXC,KAAM,CACJI,EAAG,IACHC,EAAG,KACHM,QAAS,GACTV,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,UACT,uBAAGJ,UAAY,UAAf,8BACA,yBAAKA,UAAY,eACf,yBACEO,IAAQU,IACRR,IAAM,uBACNT,UAAY,yBACZU,OAAS,MACTC,MAAQ,SAGZ,uBAAGX,UAAY,UAAf,wCAIN,CACED,GAAI,UACJC,UAAW,OACXC,KAAM,CACJI,EAAG,IACHC,EAAG,KACHM,QAAS,IACTV,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,WACT,uBAAGJ,UAAY,UAAf,kBACA,uBAAGA,UAAY,UAAf,WAAoC,yCACpC,uBAAGA,UAAY,UAAf,OAA4B,0CAA5B,KACA,uBAAGA,UAAY,UAAf,sBAIN,CACED,GAAI,UACJC,UAAW,OACXC,KAAM,CACJI,EAAG,EACHC,EAAG,KACHJ,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,WACT,uBAAGJ,UAAY,UAAf,wBAIN,CACED,GAAI,UACJC,UAAW,OACXC,KAAM,CACJI,GAAI,IACJC,EAAG,KACHY,QAAS,EACThB,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,WACT,wBAAIJ,UAAY,UAAS,0CACzB,uBAAGA,UAAY,UAAf,yBACA,uBAAGA,UAAY,UAAf,8BACA,uBAAGA,UAAY,UAAf,iCACA,uBAAGA,UAAY,UAAf,iCAIN,CACED,GAAI,UACJC,UAAW,OACXC,KAAM,CACJI,GAAI,IACJC,EAAG,KACHa,QAAS,GACTjB,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,WACT,wBAAIJ,UAAY,UAAhB,yBACA,uBAAGA,UAAY,UAAf,kCACA,uBAAGA,UAAY,UAAf,yBACA,uBAAGA,UAAY,UAAf,kCAIN,CACED,GAAI,UACJC,UAAW,OACXC,KAAM,CACJI,GAAI,IACJC,EAAG,KACHY,QAAS,GACThB,MAAO,GAETC,QAAS,CACP,yBAAKC,IAAM,WACT,wBAAIJ,UAAY,UAAhB,iBACA,uBAAGA,UAAY,UAAf,cAAmC,sCACnC,uBAAGA,UAAY,UAAf,sBACA,uBAAGA,UAAY,UACb,uBAAGoB,KAAO,yCAAV,8CC/OKC,E,iLA7CX,OACE,kBAAC,UAAD,CACEC,UAAa,EACbC,gBACE,0CACc,gDADd,kCAMAzB,EAAa0B,IACX,SAACC,EAAGC,GACF,OACEC,IAAMC,cACJC,OACA,CACE9B,GAAI0B,EAAE1B,GACNC,UAAWyB,EAAEzB,UACbC,KAAMwB,EAAExB,KACRG,IAAKsB,GAEPD,EAAEtB,QAAQqB,IACR,SAACM,EAAOJ,GACN,OACEC,IAAMI,aACJD,EACA,CACE/B,GAAI+B,EAAM/B,GACVC,UAAW8B,EAAM9B,UACjBI,IAAKsB,c,GA/BdC,IAAMK,WCGVC,MANf,WACE,OACE,kBAAC,EAAD,OCOgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.c905f725.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alfred_feels_poorly.480fb83d.svg\";","module.exports = __webpack_public_path__ + \"static/media/patient_alert.4dc1f776.png\";","module.exports = __webpack_public_path__ + \"static/media/patient_home.eca7d787.png\";","module.exports = __webpack_public_path__ + \"static/media/splash.2a15d075.png\";","module.exports = __webpack_public_path__ + \"static/media/standby_alert.8b4f1652.png\";","import React from 'react'\nimport alfredFeelsPoorly from '../images/alfred_feels_poorly.svg'\nimport patientAlert from '../images/patient_alert.png'\nimport patientHome from '../images/patient_home.png'\nimport splash from '../images/splash.png'\nimport standbyAlert from '../images/standby_alert.png'\n\nconst presentation = [\n  {\n    id: 'slide',\n    className: 'step',\n    data: {\n      scale: 3\n    },\n    content: [\n      <div key = 'slide'></div>\n    ]\n  },\n  {\n    id: 'slide1',\n    className: 'step',\n    data: {\n      scale: 3\n    },\n    content: [\n      <div key = 'slide1'>\n        <h4 className = 'center'>Presenting Cryonics Check-In</h4>\n      </div>\n    ]\n  },\n  {\n    id: 'slide2',\n    className: 'step',\n    data: {\n      x: -800,\n      y: 400,\n      scale: 1\n    },\n    content: [\n      <div key = 'slide2'>\n        <p className = 'center'>Feelin&#39; kinda poorly?</p>\n        <div className = 'center'>\n          <img\n            src = { alfredFeelsPoorly }\n            alt = 'Alfred feels poorly.'\n            className = 'center'\n            height = '50%'\n            width = '50%'\n          />\n        </div>\n      </div>\n    ]\n  },\n  {\n    id: 'slide3',\n    className: 'step',\n    data: {\n      x: -800,\n      y: 1200,\n      rotateZ: 90,\n      scale: 1\n    },\n    content: [\n      <div key = 'slide3'>\n        <p className = 'center'>Try our new app</p>\n        <div className = 'center'>\n          <img\n            src = { splash }\n            alt = 'Splash Screen'\n            className = 'center moveAround'\n            height = '40%'\n            width = '40%'\n          />\n        </div>\n        <p className = 'center'><b>Cryonics Check-In</b></p>\n      </div>\n    ]\n  },\n  {\n    id: 'slide4',\n    className: 'step',\n    data: {\n      x: 0,\n      y: 1245,\n      scale: 1\n    },\n    content: [\n      <div key = 'slide4'>\n        <p className = 'center'>\n          With Check-In,<br/>\n          you can let a <b>buddy</b> know<br/>\n          if you&#39;re <b>sick</b> or <b>injured</b>\n        </p>\n      </div>\n    ]\n  },\n  {\n    id: 'slide5',\n    className: 'step',\n    data: {\n      x: 0,\n      y: 1245,\n      z: 5000,\n      rotateZ: 270,\n      scale: 1\n    },\n    content: [\n      <div key = 'slide5'>\n        <p className = 'center'>\n          <b className='rotating'>unconscious</b>\n        </p>\n      </div>\n    ]\n  },\n  {\n    id: 'slide6',\n    className: 'step',\n    data: {\n      x: 0,\n      y: 1245,\n      z: 10000,\n      rotateZ: 0,\n      scale: 1\n    },\n    content: [\n      <div key = 'slide6'>\n        <p className = 'center'>\n          and <b>unable</b> to call for <b>help!</b>\n        </p>\n      </div>\n    ]\n  },\n  {\n    id: 'slide7',\n    className: 'step',\n    data: {\n      x: 0,\n      y: 445,\n      scale: 1\n    },\n    content: [\n      <div key = 'slide7'>\n        <p className = 'center'>Just set an interval ...</p>\n        <div className = 'center crop'>\n          <img\n            src = { patientHome }\n            alt = 'Patient-Alert Screen'\n            className = 'center crop moveAround'\n            height = '40%'\n            width = '40%'\n          />\n        </div>\n      </div>\n    ]\n  },\n  {\n    id: 'slide8',\n    className: 'step',\n    data: {\n      x: 800,\n      y: 480,\n      scale: 1\n    },\n    content: [\n      <div key = 'slide8'>\n        <p className = 'center'>\n          ... and your phone will alert you\n        </p>\n        <div className = 'center crop'>\n          <img\n            src = { patientAlert }\n            alt = 'Patient-Alert Screen'\n            className = 'center crop moveAround'\n            height = '40%'\n            width = '40%'\n          />\n        </div>\n        <p className = 'center'>\n          when it&#39;s time to check in.\n        </p>\n      </div>\n    ]\n  },\n  {\n    id: 'slide9',\n    className: 'step',\n    data: {\n      x: 800,\n      y: 1280,\n      rotateZ: 90,\n      scale: 1\n    },\n    content: [\n      <div key = 'slide9'>\n        <p className = 'center'>If you miss your check-in,</p>\n        <div className = 'center crop'>\n          <img\n            src = { standbyAlert }\n            alt = 'Standby-Alert Screen'\n            className = 'center crop moveAround'\n            height = '40%'\n            width = '40%'\n          />\n        </div>\n        <p className = 'center'>your buddy will get an alert too!</p>\n      </div>\n    ]\n  },\n  {\n    id: 'slide10',\n    className: 'step',\n    data: {\n      x: 800,\n      y: 2080,\n      rotateZ: 180,\n      scale: 1\n    },\n    content: [\n      <div key = 'slide10'>\n        <p className = 'center'>Look for us on</p>\n        <p className = 'center'>Apple&#39;s <b>App Store</b></p>\n        <p className = 'center'>and <b>Google Play</b>,</p>\n        <p className = 'center'>coming soon ...</p>\n      </div>\n    ]\n  },\n  {\n    id: 'slide11',\n    className: 'step',\n    data: {\n      x: 0,\n      y: 2045,\n      scale: 1\n    },\n    content: [\n      <div key = 'slide11'>\n        <p className = 'center'>... but first ...</p>\n      </div>\n    ]\n  },\n  {\n    id: 'slide12',\n    className: 'step',\n    data: {\n      x: -800,\n      y: 2045,\n      rotateX: 0,\n      scale: 1\n    },\n    content: [\n      <div key = 'slide12'>\n        <h3 className = 'center'><b>ATTENTION:</b></h3>\n        <p className = 'center'>We need beta-testers!</p>\n        <p className = 'center'>We&#39;d like to invite you to</p>\n        <p className = 'center'>try our upcoming beta version</p>\n        <p className = 'center'>and send us your feedback.</p>\n      </div>\n    ]\n  },\n  {\n    id: 'slide13',\n    className: 'step',\n    data: {\n      x: -800,\n      y: 2045,\n      rotateY: 90,\n      scale: 1\n    },\n    content: [\n      <div key = 'slide13'>\n        <h3 className = 'center'>Please sign-up today!</h3>\n        <p className = 'center'>Just grab a card by our poster</p>\n        <p className = 'center'>and send us an e-mail</p>\n        <p className = 'center'>at the address on the card!</p>\n      </div>\n    ]\n  },\n  {\n    id: 'slide14',\n    className: 'step',\n    data: {\n      x: -800,\n      y: 2045,\n      rotateX: 90,\n      scale: 1\n    },\n    content: [\n      <div key = 'slide14'>\n        <h3 className = 'center'>Can you code?</h3>\n        <p className = 'center'>We work in <b>React!</b></p>\n        <p className = 'center'>Fork a project at:</p>\n        <p className = 'center'>\n          <a href = 'https://github.com/cryonics-institute'>\n            https://github.com/cryonics-institute\n          </a>\n        </p>\n      </div>\n    ]\n  }\n]\n\nexport default presentation\n","import React from 'react'\nimport { Impress, Step } from 'react-impressjs'\nimport 'react-impressjs/styles/react-impressjs.css'\nimport '../App.css'\nimport presentation from './PresentationComponent'\n\nclass Main extends React.Component {\n  render () {\n    return (\n      <Impress\n        progress = { true }\n        fallbackMessage = {\n          <p>\n            Sorry, your <b>device or browser</b> does not support impress.js.\n          </p>\n        }\n      >\n        {\n          presentation.map(\n            (d, index) => {\n              return (\n                React.createElement(\n                  Step,\n                  {\n                    id: d.id,\n                    className: d.className,\n                    data: d.data,\n                    key: index\n                  },\n                  d.content.map(\n                    (child, index) => {\n                      return (\n                        React.cloneElement(\n                          child,\n                          {\n                            id: child.id,\n                            className: child.className,\n                            key: index\n                          }\n                        )\n                      )\n                    }\n                  )\n                )\n              )\n            }\n          )\n        }\n      </Impress>\n    )\n  }\n}\n\nexport default Main\n","import React from 'react'\nimport Main from './components/MainComponent'\n\nfunction App () {\n  return (\n    <Main/>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}